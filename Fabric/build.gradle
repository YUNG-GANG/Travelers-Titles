plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'idea'
}

archivesBaseName = "${mod_name}"
version = "${mc_version}-Fabric-${version}"
group = maven_group

def useLocalYungsApi = findProject(':yungsapi') != null

repositories {
    maven { url "https://maven.fabricmc.net" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
}

dependencies {
    minecraft "com.mojang:minecraft:${mc_version}"
    mappings loom.officialMojangMappings()

    // YUNG's API
    if (useLocalYungsApi) {
        modImplementation files("libs/YungsApi-1.19.4-Fabric-${yungsapi_version}.jar")
    } else {
        modImplementation "com.yungnickyoung.minecraft.yungsapi:YungsApi:1.19.4-Fabric-${yungsapi_version}"
    }
    implementation("org.reflections:reflections:0.10.2")
    include("org.reflections:reflections:0.10.2")

    // Fabric
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${mc_version}"

    // ClothConfig
    modImplementation "me.shedaniel.cloth:cloth-config-fabric:${project.clothconfig_version_fabric}"

    // ModMenu
    modImplementation ("com.terraformersmc:modmenu:${project.modmenu_version_fabric}") { transitive = false }

    implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.2'
    compileOnly project(":Common")
}

loom {
    mixin.defaultRefmapName = "${mod_id}.refmap.json"

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version
    inputs.property "yungsapi_version", project.yungsapi_version
    inputs.property "mc_version", project.mc_version
    inputs.property "mod_description", project.mod_description
    inputs.property "mod_full_name", project.mod_full_name
    inputs.property "mod_id", project.mod_id
    inputs.property "fabric_version", project.fabric_version
    inputs.property "fabric_loader_version", project.fabric_loader_version
    inputs.property "clothconfig_version_fabric", project.clothconfig_version_fabric

    filesMatching("fabric.mod.json") {
        expand "version": project.version,
                "yungsapi_version": project.yungsapi_version,
                "mc_version": project.mc_version,
                "mod_description": project.mod_description,
                "mod_full_name": project.mod_full_name,
                "mod_id": project.mod_id,
                "fabric_version": project.fabric_version,
                "fabric_loader_version": project.fabric_loader_version,
                "clothconfig_version_fabric": project.clothconfig_version_fabric
    }
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

jar {
    from("LICENSE") {
        rename { "${it}_${mod_name}" }
    }
}